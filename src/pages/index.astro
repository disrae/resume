---
import BaseLayout from "../layouts/BaseLayout.astro";
import { Icon } from "astro-icon/components";
import { resumeData } from "../data/resume";
const { personal, ventures, experience, education, skills, languages } =
	resumeData;
// commit
---

<BaseLayout title="Daniel Israel - Software Developer" includePDFScript={true}>
	<style>
		details > summary {
			list-style: none;
			position: relative;
			padding-left: 1.5rem;
		}
		details > summary::-webkit-details-marker {
			display: none;
		}
		details > summary::before {
			content: "â–¶";
			position: absolute;
			left: 0;
			transition: transform 0.2s;
			font-size: 0.8em;
			top: 50%;
			transform: translateY(-50%);
		}
		details[open] > summary::before {
			transform: translateY(-50%) rotate(90deg);
		}
	</style>

	<button
		id="download-pdf-button"
		class="no-print fixed top-4 right-4 bg-teal-600 transform hover:-translate-y-0 translate-y-[-2px] transition-all shadow-lg hover:shadow-none hover:bg-teal-800 text-white font-bold py-2 px-4 rounded"
	>
		Download PDF
	</button>

	<div class="container mx-auto p-4 py-16 max-w-4xl">
		<header class="mb-6 bg-white rounded-lg shadow-sm p-6">
			<h1 class="text-4xl font-bold">{personal.name}</h1>
			<p class="text-xl text-gray-600">{personal.title}</p>
			<div
				class="flex flex-col sm:flex-row items-start sm:items-center mt-2"
			>
				<button
					onclick="navigator.clipboard.writeText('{personal.email}');
						const notification = document.getElementById('copy-notification');
						notification.classList.remove('hidden');
						setTimeout(() => notification.classList.add('hidden'), 1200)"
					class="border shadow bg-gray-100 hover:bg-gray-200 px-2 py-1 rounded transition-colors cursor-pointer inline-flex items-center"
					title="Click to copy email"
				>
					<Icon name="email" class="w-4 h-4 inline-block" />
					<div class="w-2"></div>
					<span>{personal.email}</span>
				</button>
				<div class="w-4 h-4"></div>
				<a
					class="border shadow bg-gray-100 hover:bg-gray-200 px-2 py-1 rounded transition-colors cursor-pointer inline-flex items-center"
					target="_blank"
					rel="noopener noreferrer"
					href={`https://linkedin.com/in/${personal.linkedin}`}
				>
					<Icon name="linkedin" class="w-4 h-4 inline-block" />
					<div class="w-2"></div>
					LinkedIn
				</a>
			</div>
			<div id="copy-notification" class="mt-2 text-teal-600 hidden">
				Copied email to clipboard!
			</div>
		</header>

		<main>
			<section class="mb-8 bg-white rounded-lg shadow-sm p-6">
				<details open>
					<summary
						class="text-2xl font-semibold text-gray-800 cursor-pointer hover:text-gray-600 transition-colors"
					>
						Experience
					</summary>
					{
						experience.map((job, index) => (
							<details
								class="my-6 bg-gray-50 rounded-lg shadow-sm p-4"
								open={index === 0}
							>
								<summary class="cursor-pointer hover:text-gray-600 transition-colors">
									<h3 class="text-xl font-semibold inline-block">
										{job.title}
									</h3>
									<p class="text-gray-600 inline-block ml-2">
										{job.company} | {job.period}
									</p>
								</summary>
								<div class="mt-4">
									<p>{job.description}</p>
									{job?.links?.length &&
										job.links.map((link) => (
											<p class="mt-2">
												Demo:{" "}
												<a
													href={link.url}
													target="_blank"
													rel="noopener noreferrer"
													class="text-teal-600 hover:text-teal-800 underline"
												>
													{link.name}
												</a>
											</p>
										))}
									<ul class="list-disc list-inside mt-2">
										{job.achievements.map((achievement) => (
											<li class="text-gray-700">
												{achievement}
											</li>
										))}
									</ul>
									<div class="mt-2 flex flex-wrap gap-2">
										{job.tools.map((tool) => (
											<span class="bg-gray-200 px-2 py-1 rounded text-sm">
												{tool}
											</span>
										))}
									</div>
								</div>
							</details>
						))
					}
				</details>
			</section>

			<section class="mb-8 bg-white rounded-lg shadow-sm p-6">
				<details open>
					<summary
						class="text-2xl font-semibold text-gray-800 cursor-pointer hover:text-gray-600 transition-colors"
					>
						Ventures
					</summary>
					{
						ventures.map((venture, index) => (
							<details
								class="my-6 bg-gray-50 rounded-lg shadow-sm p-4"
								open={index === 0}
							>
								<summary class="cursor-pointer hover:text-gray-600 transition-colors">
									<h3 class="text-xl font-semibold inline-block">
										{venture.name}
									</h3>
									<p class="text-gray-600 inline-block ml-2">
										{venture.role} | {venture.period}
									</p>
								</summary>
								<div class="mt-4">
									<p>{venture.description}</p>

									{venture?.link && (
										<p class="mt-2">
											Demo:{" "}
											<a
												href={venture.link.url}
												target="_blank"
												rel="noopener noreferrer"
												class="text-teal-600 hover:text-teal-800 underline"
											>
												{venture.link.name}
											</a>
										</p>
									)}

									<h4 class="font-semibold mt-3">
										Current Features:
									</h4>
									<ul class="list-disc list-inside mt-2">
										{venture.features.map((feature) => (
											<li class="text-gray-700">
												{feature}
											</li>
										))}
									</ul>

									<h4 class="font-semibold mt-3">
										Coming Soon:
									</h4>
									<ul class="list-disc list-inside mt-2">
										{venture.comingSoon.map((feature) => (
											<li class="text-gray-700">
												{feature}
											</li>
										))}
									</ul>

									<div class="mt-3 flex flex-wrap gap-2">
										{venture.tools.map((tool) => (
											<span class="bg-gray-200 px-2 py-1 rounded text-sm">
												{tool}
											</span>
										))}
									</div>
								</div>
							</details>
						))
					}
				</details>
			</section>

			<div class="grid md:grid-cols-2 gap-8">
				<section class="bg-white rounded-lg shadow-sm p-6">
					<details>
						<summary
							class="text-2xl font-semibold text-gray-800 cursor-pointer hover:text-gray-600 transition-colors"
						>
							Education
						</summary>
						{
							education.map((edu) => (
								<details
									class="my-6 bg-gray-50 rounded-lg shadow-sm p-4"
									open
								>
									<summary class="cursor-pointer hover:text-gray-600 transition-colors">
										<h3 class="text-lg font-semibold inline-block">
											{edu.school}
										</h3>
									</summary>
									<div class="mt-2">
										<p class="text-gray-600">
											{edu.degree}
										</p>
										<p class="text-sm text-gray-500">
											{edu.period}
										</p>
										<p class="mt-1">{edu.details}</p>
									</div>
								</details>
							))
						}
					</details>
				</section>

				<div class="space-y-8">
					<section class="bg-white rounded-lg shadow-sm p-6">
						<details>
							<summary
								class="text-2xl font-semibold text-gray-800 cursor-pointer hover:text-gray-600 transition-colors"
							>
								Skills
							</summary>
							<div
								class="bg-gray-50 rounded-lg shadow-sm p-4 my-6"
							>
								<ul class="list-disc list-inside">
									{skills.map((skill) => <li>{skill}</li>)}
								</ul>
							</div>
						</details>
					</section>

					<section class="bg-white rounded-lg shadow-sm p-6">
						<details>
							<summary
								class="text-2xl font-semibold text-gray-800 cursor-pointer hover:text-gray-600 transition-colors"
							>
								Languages
							</summary>
							<div
								class="bg-gray-50 rounded-lg shadow-sm p-4 my-6"
							>
								<ul class="list-disc list-inside">
									{
										languages.map((language) => (
											<li>{language}</li>
										))
									}
								</ul>
							</div>
						</details>
					</section>
				</div>
			</div>
		</main>
	</div>

	<script>
		document
			.getElementById("download-pdf-button")
			?.addEventListener("click", async () => {
				const response = await fetch("/api/generate-pdf");
				const blob = await response.blob();
				const url = window.URL.createObjectURL(blob);
				const a = document.createElement("a");
				a.href = url;
				a.download = "daniel-israel-resume.pdf";
				document.body.appendChild(a);
				a.click();
				document.body.removeChild(a);
				window.URL.revokeObjectURL(url);
			});
	</script>
</BaseLayout>
